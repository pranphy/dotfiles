local snacks = require("snacks")
snacks.setup({
    --bigfile = { enabled = true },
    --dashboard = { enabled = true },
    explorer = { enabled = true },
    --indent = { enabled = true },
    input = { enabled = true },
    notifier = {
      enabled = false,
      timeout = 3000,
    },
    image = {enabled = true },
    picker = { enabled = true },
    quickfile = { enabled = true },
    scope = { enabled = true },
    scroll = { enabled = true },
    statuscolumn = { enabled = true },
    words = { enabled = true },
    stypes = {
      notification = {
        -- wo = { wrap = true } -- Wrap notifications
      }
    }
})

--{ "gr", function() snacks.picker.lsp_references() end, nowait = true, desc = "References" },
--vim.keymap.set("n","<leader>fd", function() snacks.picker.files({ cwd = vim.fn.stdpath("config") }) end) -- desc = "Find Config File" },
vim.keymap.set("n","<leader>fd", function() snacks.picker.files({ cwd = '~/repos/dotfiles' }) end) -- desc = "Find Config File" },
--{ "<leader>.",  function() snacks.scratch() end, desc = "Toggle Scratch Buffer" },
--{ "<leader>n",  function() snacks.notifier.show_history() end, desc = "Notification History" },
--{ '<leader>s"', function() snacks.picker.registers() end, desc = "Registers" },
--{ '<leader>s/', function() snacks.picker.search_history() end, desc = "Search History" },
--{ "<leader>S",  function() snacks.scratch.select() end, desc = "Select Scratch Buffer" },
vim.keymap.set({"n"}, "<leader>z",  function() snacks.zen() end)
--{ "<leader>Z",  function() snacks.zen.zoom() end, desc = "Toggle Zoom" },
-- LSP
-- Other
-- search
    -- Top Pickers & Explorer
vim.keymap.set({"n"},"gD", function() snacks.picker.lsp_declarations() end) -- Goto Declaration,
vim.keymap.set({"n"},"gd", function() snacks.picker.lsp_definitions() end) -- Goto Definition,
vim.keymap.set({"n"},"gI", function() snacks.picker.lsp_implementations() end) -- Goto Implementation,
vim.keymap.set({"n"},"gy", function() snacks.picker.lsp_type_definitions() end) -- Goto T[y]pe Definition,
vim.keymap.set({"n"},"<leader>bd", function() snacks.bufdelete() end) -- Delete Buffer,
vim.keymap.set({"n"},"<leader>cR", function() snacks.rename.rename_file() end) -- Rename File,
vim.keymap.set({"n"},"<leader>e", function() snacks.explorer() end) -- File Explorer,
vim.keymap.set({"n"},"<leader>fb", function() snacks.picker.buffers() end) -- Buffers,
vim.keymap.set({"n"},"<leader>ff", function() snacks.picker.files() end) -- Find Files,
vim.keymap.set({"n"},"<leader>fg", function()  snacks.picker.git_files() end) -- Find Git Files,
vim.keymap.set({"n"},"<leader>fp", function() snacks.picker.projects() end) -- Projects,
vim.keymap.set({"n"},"<leader>fr", function() snacks.picker.recent() end) -- Recent,
vim.keymap.set({"n"},"<leader>gB", function() snacks.gitbrowse() end) -- Git Browse", mode = { "n", "v },
vim.keymap.set({"n"},"<leader>gb", function() snacks.picker.git_branches() end) -- Git Branches,
vim.keymap.set({"n"},"<leader>gd", function() snacks.picker.git_diff() end) -- Git Diff (Hunks),
vim.keymap.set({"n"},"<leader>gf", function() snacks.picker.git_log_file() end) -- Git Log File,
vim.keymap.set({"n"},"<leader>gg", function() snacks.lazygit() end) -- Lazygit,
vim.keymap.set({"n"},"<leader>gl", function() snacks.picker.git_log() end) -- Git Log,
vim.keymap.set({"n"},"<leader>gL", function() snacks.picker.git_log_line() end) -- Git Log Line,
vim.keymap.set({"n"},"<leader>gS", function() snacks.picker.git_stash() end) -- Git Stash,
vim.keymap.set({"n"},"<leader>gs", function() snacks.picker.git_status() end) -- Git Status,
vim.keymap.set({"n"},"<leader>n", function() snacks.picker.notifications() end) -- Notification History,
vim.keymap.set({"n"},"<leader>sa", function() snacks.picker.autocmds() end) -- Autocmds,
vim.keymap.set({"n"},"<leader>sB", function() snacks.picker.grep_buffers() end) -- Grep Open Buffers,
vim.keymap.set({"n"},"<leader>sb", function() snacks.picker.lines() end) -- Buffer Lines,
vim.keymap.set({"n"},"<leader>sb", function() snacks.picker.lines() end) -- Buffer Lines,
vim.keymap.set({"n"},"<leader>sc", function() snacks.picker.command_history() end) -- Command History,
vim.keymap.set({"n"},"<leader>sC", function() snacks.picker.commands() end) -- Commands,
vim.keymap.set({"n"},"<leader>sD", function() snacks.picker.diagnostics_buffer() end) -- Buffer Diagnostics,
vim.keymap.set({"n"},"<leader>sd", function() snacks.picker.diagnostics() end) -- Diagnostics,
vim.keymap.set({"n"},"<leader>sg", function() snacks.picker.grep() end) -- Grep,
vim.keymap.set({"n"},"<leader>sh", function() snacks.picker.help() end) -- Help Pages,
vim.keymap.set({"n"},"<leader>sH", function() snacks.picker.highlights() end) -- Highlights,
vim.keymap.set({"n"},"<leader>si", function() snacks.picker.icons() end) -- Icons,
vim.keymap.set({"n"},"<leader>sj", function() snacks.picker.jumps() end) -- Jumps,
vim.keymap.set({"n"},"<leader>sk", function() snacks.picker.keymaps() end) -- Keymaps,
vim.keymap.set({"n"},"<leader>sl", function() snacks.picker.loclist() end) -- Location List,
vim.keymap.set({"n"},"<leader>sM", function() snacks.picker.man() end) -- Man Pages,
vim.keymap.set({"n"},"<leader>sm", function() snacks.picker.marks() end) -- Marks,
vim.keymap.set({"n"},"<leader>,", function() snacks.picker.buffers() end) -- Buffers,
vim.keymap.set({"n"},"<leader>:", function() snacks.picker.command_history() end) -- Command History,
vim.keymap.set({"n"},"<leader>fg", function() snacks.picker.grep() end) -- Grep,
vim.keymap.set({"n"},"<leader><space>", function() snacks.picker.smart() end) -- Smart Find Files,
vim.keymap.set({"n"},"<leader>sp", function() snacks.picker.lazy() end) -- Search for Plugin Spec,
vim.keymap.set({"n"},"<leader>sq", function() snacks.picker.qflist() end) -- Quickfix List,
vim.keymap.set({"n"},"<leader>sR", function() snacks.picker.resume() end) -- Resume,
vim.keymap.set({"n"},"<leader>ss", function() snacks.picker.lsp_symbols() end) -- LSP Symbols,
vim.keymap.set({"n"},"<leader>sS", function() snacks.picker.lsp_workspace_symbols() end) -- LSP Workspace Symbols,
vim.keymap.set({"n", "x"},"<leader>su",function () snacks.picker.undo() end ) -- Undo History,
vim.keymap.set({"n"},"<leader>sw", function() snacks.picker.grep_word() end) -- Visual selection or word", mode = { "n", "x },
vim.keymap.set({"n"},"<leader>uC", function() snacks.picker.colorschemes() end) -- Colorschemes,
vim.keymap.set({"n"},"<leader>un", function() snacks.notifier.hide() end) -- Dismiss All Notifications,
